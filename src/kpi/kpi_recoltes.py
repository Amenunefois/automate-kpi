import pandas as pd
import logging

def calculer_kpis_recoltes(df):
    logging.info("üåæ Calcul des KPI de r√©coltes...")

    # Nettoyage des noms de colonnes
    df.columns = [col.strip() for col in df.columns]

    # V√©rification des colonnes n√©cessaires
    required_cols = ["Date vente","Vari√©t√©", "Quantit√© produite", "Culture"]
    for col in required_cols:
        if col not in df.columns:
            logging.warning(f"Colonne manquante : {col}")
            return pd.DataFrame()

    # Conversion des types
    df["Date vente"] = pd.to_datetime(df["Date vente"], format="%d/%m/%Y", errors="coerce")
    df = df.dropna(subset=["Date vente"])
    df["Quantit√© produite"] = pd.to_numeric(df["Quantit√© produite"], errors="coerce")
    df["Culture"] = df["Culture"].astype(str).str.strip()

    # Cr√©ation des p√©riodes
    df["Mois"] = df["Date vente"].dt.to_period("M").astype(str)
    df["Ann√©e"] = df["Date vente"].dt.year.astype(str)
    df["Vari√©t√©"] = df["Vari√©t√©"].astype(str).str.strip()  # nettoyage vari√©t√©


    # KPI : Quantit√© r√©colt√©e par Mois + Culture
    kpi = (
        df.groupby(["Mois", "Culture","Vari√©t√©"])["Quantit√© produite"]
        .sum()
        .reset_index()
        .assign(KPI="par_mois", Type="recolte")
    )

    # Ajout de l‚Äôann√©e extraite du mois
    kpi["Ann√©e"] = kpi["Mois"].str[:4]

    # Harmonisation des colonnes
    kpi = kpi.rename(columns={"Quantit√© produite": "Quantit√© r√©colt√©e"})
    columns_order = ["Type", "KPI", "Culture", "Vari√©t√©", "Quantit√© r√©colt√©e", "Mois", "Ann√©e"]
    for col in columns_order:
        if col not in kpi.columns:
            kpi[col] = None

    logging.info("‚úÖ KPI de r√©coltes calcul√©.")
    return kpi[columns_order]
